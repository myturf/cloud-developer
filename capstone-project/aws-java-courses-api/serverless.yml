service: courses-api

custom:
  productsTableName: 'java-courses-${self:provider.stage}'

provider:
  name: aws
  runtime: java8
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["CoursesDynamoDBTable", "Arn" ] }
  environment:
    PRODUCTS_TABLE_NAME: ${self:custom.coursesTableName}

package:
  artifact: 'target/${self:service}-${self:provider.stage}.jar'

functions:
  listCourses:
    handler: com.udacity.rest.ListCourseHandler
    events:
      - http:
          path: /courses
          method: get
  getCourse:
    handler: com.udacity.rest.GeCourseHandler
    events:
      - http:
          path: /courses/{id}
          method: get
  createCourse:
    handler: com.udacity.rest.CreateCourseHandler
    events:
      - http:
          path: /coures
          method: post
  deleteProduct:
    handler: com.udacity.rest.DeleteCourseHandler
    events:
      - http:
          path: /courses/{id}
          method: delete

resources:
  Resources:
    ProductsDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.coursesTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
